{"ast":null,"code":"var _jsxFileName = \"/home/thomas/Project/React/react-website-v1/src/components/pages/Login.js\";\nimport React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router';\nimport { useToasts } from 'react-toast-notifications';\nimport queryString from 'query-string';\nimport API from '../../services/API';\nexport default function Login() {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const {\n    redirectPath\n  } = queryString.parse(window.location.search);\n  const history = useHistory();\n  const {\n    addToast\n  } = useToasts();\n\n  const onSubmit = async data => {\n    try {\n      await API.post('auth/login', data);\n      history.push('/profile');\n      addToast('Yeaaah', {\n        appearance: 'success',\n        autoDismiss: true\n      });\n    } catch (err) {\n      addToast('Identifiants non reconnus', {\n        appearance: 'error',\n        autoDismiss: true\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (errors) {\n      const arrayErrors = Object.values(errors);\n      arrayErrors.map(error => addToast(error.message, {\n        appearance: 'error',\n        autoDismiss: true\n      }));\n    }\n  }, [errors]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Login Page\"), redirectPath && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"You were redirected here because your session is not valid. Maybe it has expired since the last time you visited this page ? Please log in again using the form below\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, 'Email : ', /*#__PURE__*/React.createElement(\"input\", {\n    ref: register,\n    name: \"email\",\n    id: \"email\",\n    type: \"email\",\n    autoComplete: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, 'Password : ', /*#__PURE__*/React.createElement(\"input\", {\n    ref: register,\n    name: \"password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"stayConnected\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: register,\n    name: \"stayConnected\",\n    id: \"stayConnected\",\n    type: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), \"Stay connected ?\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Log in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/thomas/Project/React/react-website-v1/src/components/pages/Login.js"],"names":["React","useEffect","useForm","useHistory","useToasts","queryString","API","Login","register","handleSubmit","errors","redirectPath","parse","window","location","search","history","addToast","onSubmit","data","post","push","appearance","autoDismiss","err","arrayErrors","Object","values","map","error","message"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router';\nimport { useToasts } from 'react-toast-notifications';\nimport queryString from 'query-string';\nimport API from '../../services/API';\n\nexport default function Login() {\n  const { register, handleSubmit, errors } = useForm();\n  const { redirectPath } = queryString.parse(window.location.search);\n  const history = useHistory();\n  const { addToast } = useToasts();\n\n  const onSubmit = async (data) => {\n    try {\n      await API.post('auth/login', data);\n      history.push('/profile');\n      addToast('Yeaaah', {\n        appearance: 'success',\n        autoDismiss: true,\n      });\n    } catch (err) {\n      addToast('Identifiants non reconnus', {\n        appearance: 'error',\n        autoDismiss: true,\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (errors) {\n      const arrayErrors = Object.values(errors);\n      arrayErrors.map((error) =>\n        addToast(error.message, {\n          appearance: 'error',\n          autoDismiss: true,\n        })\n      );\n    }\n  }, [errors]);\n\n  return (\n    <>\n      <h1>Login Page</h1>\n      {redirectPath && (\n        <p>\n          You were redirected here because your session is not valid. Maybe it\n          has expired since the last time you visited this page ? Please log in\n          again using the form below\n        </p>\n      )}\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <label htmlFor='email'>\n          {'Email : '}\n          <input\n            ref={register}\n            name='email'\n            id='email'\n            type='email'\n            autoComplete='username'\n          />\n        </label>\n        <label htmlFor='password'>\n          {'Password : '}\n          <input\n            ref={register}\n            name='password'\n            type='password'\n            id='password'\n            autoComplete='current-password'\n          />\n        </label>\n        <label htmlFor='stayConnected'>\n          <input\n            ref={register}\n            name='stayConnected'\n            id='stayConnected'\n            type='checkbox'\n          />\n          Stay connected ?\n        </label>\n        <input type='submit' value='Log in' />\n      </form>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}