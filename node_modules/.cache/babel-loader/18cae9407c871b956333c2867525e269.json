{"ast":null,"code":"var _jsxFileName = \"/home/thomas/Project/React/react-website-v1/src/_contexts/LoginContextProvider.js\";\nimport React, { createContext, useEffect } from 'react';\nimport useLocalStorage from '../../services/useLocalStorage';\nimport API from '../../services/API';\nexport const LoginContext = createContext();\nexport default function LoginProvider({\n  children\n}) {\n  const [userLogged, setUserLogged] = useLocalStorage('user');\n  useEffect(() => {\n    setUserLogged(null);\n    API.get('/me').then(res => setUserLogged(res.data));\n  }, []);\n  return /*#__PURE__*/React.createElement(LoginContext.Provider, {\n    value: {\n      userLogged,\n      setUserLogged\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, children);\n}","map":{"version":3,"sources":["/home/thomas/Project/React/react-website-v1/src/_contexts/LoginContextProvider.js"],"names":["React","createContext","useEffect","useLocalStorage","API","LoginContext","LoginProvider","children","userLogged","setUserLogged","get","then","res","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AAEA,OAAO,MAAMC,YAAY,GAAGJ,aAAa,EAAlC;AAEP,eAAe,SAASK,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAqC;AAClD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,eAAe,CAAC,MAAD,CAAnD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAL,IAAAA,GAAG,CAACM,GAAJ,CAAQ,KAAR,EAAeC,IAAf,CAAqBC,GAAD,IAASH,aAAa,CAACG,GAAG,CAACC,IAAL,CAA1C;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEL,MAAAA,UAAF;AAAcC,MAAAA;AAAd,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QADH,CADF;AAKD","sourcesContent":["import React, { createContext, useEffect } from 'react';\nimport useLocalStorage from '../../services/useLocalStorage';\nimport API from '../../services/API';\n\nexport const LoginContext = createContext();\n\nexport default function LoginProvider({ children }) {\n  const [userLogged, setUserLogged] = useLocalStorage('user');\n\n  useEffect(() => {\n    setUserLogged(null);\n    API.get('/me').then((res) => setUserLogged(res.data));\n  }, []);\n\n  return (\n    <LoginContext.Provider value={{ userLogged, setUserLogged }}>\n      {children}\n    </LoginContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}