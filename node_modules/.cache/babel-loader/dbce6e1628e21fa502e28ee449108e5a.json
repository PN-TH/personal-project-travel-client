{"ast":null,"code":"var _jsxFileName = \"/home/thomas/Project/React/react-website-v1/src/components/pages/Register.js\";\nimport React, { useEffect, useRef } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { useForm } from 'react-hook-form';\nimport Button from '@material-ui/core/Button';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useToasts } from 'react-toast-notifications';\nimport API from '../../services/API';\nconst useStyles = makeStyles(theme => ({\n  btn: {\n    backgroundColor: '#6d071a',\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor: '#6d071a'\n    }\n  },\n  input: {\n    [theme.breakpoints.up('md')]: {\n      width: '400px'\n    },\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline': {\n      borderColor: '#6d071a'\n    },\n    '& .MuiOutlinedInput-input': {\n      color: '#6d071a'\n    },\n    '& .MuiInputLabel-outlined.Mui-focused': {\n      color: '#6d071a'\n    }\n  }\n}));\n\nconst Register = () => {\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslation();\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch\n  } = useForm({\n    mode: 'onSubmit'\n  });\n  const {\n    addToast\n  } = useToasts();\n  useEffect(() => {\n    if (errors) {\n      const arrayErrors = Object.values(errors);\n      arrayErrors.map(error => addToast(error.message, {\n        appearance: 'error',\n        autoDismiss: true\n      }));\n    }\n  }, [errors]);\n  const password = useRef({});\n  password.current = watch('password', '');\n  const history = useHistory();\n\n  const onSubmit = async data => {\n    try {\n      await API.post('users/', data);\n      history.push('/login');\n      addToast('Votre compte a été creé, vous pouvez vous connecter', {\n        appearance: 'success',\n        autoDismiss: true\n      });\n    } catch (err) {\n      if (err.response.status === 500) {\n        addToast('Erreur lors de votre inscription, veuillez rééssayer plus tard', {\n          appearance: 'error',\n          autoDismiss: true\n        });\n      } else err.response.data.errorsByField[0].message.map(things => {\n        return addToast(things, {\n          appearance: 'error',\n          autoDismiss: true\n        });\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-register-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \" \", t('Inscription.h1')), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"line\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"________________________\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-register-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: classes.input,\n    id: \"outlined-basic\",\n    label: t('Inscription.label1'),\n    variant: \"outlined\",\n    inputRef: register({\n      required: 'Veuiller renseigner votre prénom.'\n    }),\n    name: \"firstname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-register-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: classes.input,\n    id: \"outlined-basic\",\n    label: t('Inscription.label2'),\n    variant: \"outlined\",\n    inputRef: register({\n      required: 'Veuillez renseigner votre nom'\n    }),\n    name: \"lastname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-register-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: classes.input,\n    id: \"outlined-basic\",\n    label: t('Inscription.label3'),\n    variant: \"outlined\",\n    inputRef: register({\n      required: 'Veuillez renseigner votre email'\n    }),\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-register-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: classes.input,\n    id: \"outlined-basic\",\n    label: t('Inscription.label4'),\n    variant: \"outlined\",\n    inputRef: register({\n      message: 'Votre numéro de téléphone doit contenir 10 caractères'\n    }),\n    name: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-register-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: classes.input,\n    type: \"password\",\n    id: \"outlined-basic\",\n    label: t('Inscription.label5'),\n    variant: \"outlined\",\n    inputRef: register({\n      required: 'Veuillez renseigner un mot de passe'\n    }),\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-register-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: classes.input,\n    type: \"password\",\n    id: \"outlined-basic\",\n    label: t('Inscription.label6'),\n    variant: \"outlined\",\n    inputRef: register({\n      required: 'Veuillez confirmer votre mot de passe',\n      validate: value => value === password.current || 'Les mots de passe ne correspondent pas'\n    }),\n    name: \"password_confirmation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-register-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.btn,\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, t('Inscription.button'))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"link-back-to-login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }, t('Inscription.link'))))));\n};\n\nexport default Register;","map":{"version":3,"sources":["/home/thomas/Project/React/react-website-v1/src/components/pages/Register.js"],"names":["React","useEffect","useRef","TextField","useForm","Button","useTranslation","Link","useHistory","makeStyles","useToasts","API","useStyles","theme","btn","backgroundColor","textTransform","input","breakpoints","up","width","borderColor","color","Register","classes","t","register","handleSubmit","errors","watch","mode","addToast","arrayErrors","Object","values","map","error","message","appearance","autoDismiss","password","current","history","onSubmit","data","post","push","err","response","status","errorsByField","things","required","validate","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { useForm } from 'react-hook-form';\nimport Button from '@material-ui/core/Button';\nimport { useTranslation } from 'react-i18next';\nimport { Link, useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useToasts } from 'react-toast-notifications';\nimport API from '../../services/API';\n\nconst useStyles = makeStyles((theme) => ({\n  btn: {\n    backgroundColor: '#6d071a',\n    textTransform: 'none',\n    '&:hover': {\n      backgroundColor: '#6d071a',\n    },\n  },\n  input: {\n    [theme.breakpoints.up('md')]: {\n      width: '400px',\n    },\n    '& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline': {\n      borderColor: '#6d071a',\n    },\n    '& .MuiOutlinedInput-input': {\n      color: '#6d071a',\n    },\n    '& .MuiInputLabel-outlined.Mui-focused': {\n      color: '#6d071a',\n    },\n  },\n}));\n\nconst Register = () => {\n  const classes = useStyles();\n  const { t } = useTranslation();\n  const { register, handleSubmit, errors, watch } = useForm({\n    mode: 'onSubmit',\n  });\n  const { addToast } = useToasts();\n\n  useEffect(() => {\n    if (errors) {\n      const arrayErrors = Object.values(errors);\n      arrayErrors.map((error) =>\n        addToast(error.message, {\n          appearance: 'error',\n          autoDismiss: true,\n        })\n      );\n    }\n  }, [errors]);\n\n  const password = useRef({});\n  password.current = watch('password', '');\n\n  const history = useHistory();\n\n  const onSubmit = async (data) => {\n    try {\n      await API.post('users/', data);\n      history.push('/login');\n      addToast('Votre compte a été creé, vous pouvez vous connecter', {\n        appearance: 'success',\n        autoDismiss: true,\n      });\n    } catch (err) {\n      if (err.response.status === 500) {\n        addToast(\n          'Erreur lors de votre inscription, veuillez rééssayer plus tard',\n          {\n            appearance: 'error',\n            autoDismiss: true,\n          }\n        );\n      } else\n        err.response.data.errorsByField[0].message.map((things) => {\n          return addToast(things, {\n            appearance: 'error',\n            autoDismiss: true,\n          });\n        });\n    }\n  };\n\n  return (\n    <div className='container-register-form'>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <h1> {t('Inscription.h1')}</h1>\n        <p className='line'>________________________</p>\n        <div className='input-register-form'>\n          <TextField\n            className={classes.input}\n            id='outlined-basic'\n            label={t('Inscription.label1')}\n            variant='outlined'\n            inputRef={register({\n              required: 'Veuiller renseigner votre prénom.',\n            })}\n            name='firstname'\n          />\n        </div>\n        <div className='input-register-form'>\n          <TextField\n            className={classes.input}\n            id='outlined-basic'\n            label={t('Inscription.label2')}\n            variant='outlined'\n            inputRef={register({\n              required: 'Veuillez renseigner votre nom',\n            })}\n            name='lastname'\n          />\n        </div>\n\n        <div className='input-register-form'>\n          <TextField\n            className={classes.input}\n            id='outlined-basic'\n            label={t('Inscription.label3')}\n            variant='outlined'\n            inputRef={register({\n              required: 'Veuillez renseigner votre email',\n            })}\n            name='email'\n          />\n        </div>\n        <div className='input-register-form'>\n          <TextField\n            className={classes.input}\n            id='outlined-basic'\n            label={t('Inscription.label4')}\n            variant='outlined'\n            inputRef={register({\n              message: 'Votre numéro de téléphone doit contenir 10 caractères',\n            })}\n            name='phone'\n          />\n        </div>\n        <div className='input-register-form'>\n          <TextField\n            className={classes.input}\n            type='password'\n            id='outlined-basic'\n            label={t('Inscription.label5')}\n            variant='outlined'\n            inputRef={register({\n              required: 'Veuillez renseigner un mot de passe',\n            })}\n            name='password'\n          />\n        </div>\n\n        <div className='input-register-form'>\n          <TextField\n            className={classes.input}\n            type='password'\n            id='outlined-basic'\n            label={t('Inscription.label6')}\n            variant='outlined'\n            inputRef={register({\n              required: 'Veuillez confirmer votre mot de passe',\n              validate: (value) =>\n                value === password.current ||\n                'Les mots de passe ne correspondent pas',\n            })}\n            name='password_confirmation'\n          />\n        </div>\n\n        <div className='button-register-form'>\n          <Button\n            className={classes.btn}\n            type='submit'\n            variant='contained'\n            color='primary'\n          >\n            {t('Inscription.button')}\n          </Button>\n        </div>\n        <div className='link-back-to-login'>\n          <Link to='/login'>\n            <p>{t('Inscription.link')}</p>\n          </Link>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}